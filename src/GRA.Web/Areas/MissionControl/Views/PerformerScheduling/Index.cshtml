@model GRA.Controllers.ViewModel.MissionControl.PerformerScheduling.ScheduleOverviewViewModel

@{
    var hasBackToBacks = false;
}

@section styles {
    <link rel="stylesheet" href="/css/performerregistration.min.css" />
}

<div class="row mt-3">
    <div class="col-12 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Program Selection</h3>
            </div>
            <div class="card-body">
                @if (Model.SchedulingStage < GRA.Domain.Model.PsSchedulingStage.SchedulingPreview)
                {
                    <p class="mb-2 mt-0 lh-base">
                        The available programs and kits will be available to view starting on
                        @Model.Settings.SchedulingPreview.Value.ToLongDateString().
                        Please come back then!
                    </p>
                }
                else if (Model.SchedulingStage == GRA.Domain.Model.PsSchedulingStage.SchedulingPreview)
                {
                    <p class="mb-4 mt-0 lh-base">
                        The available programs and kits are available for preview until selection
                        begins on @Model.Settings.SchedulingOpen.Value.ToLongDateString() at
                        @Model.Settings.SchedulingOpen.Value.ToShortTimeString().
                    </p>
                    <div class="d-flex justify-content-around mb-3 d-print-none">
                        <a asp-action="Performers" class="btn btn-lg btn-outline-primary">
                            <span class="fas fa-theater-masks"></span>
                            Preview Performers
                        </a>
                        <a asp-action="Kits" class="btn btn-lg btn-outline-primary">
                            <span class="fas fa-box"></span>
                            Preview Kits
                        </a>
                    </div>
                }
                else if (Model.SchedulingStage == GRA.Domain.Model.PsSchedulingStage.SchedulingOpen)
                {
                    @if (Model.CanSchedule)
                    {
                        <p class="mb-4 mt-0 lh-base">
                            Scheduling has begun! You have until
                            @Model.Settings.SchedulingClosed.Value.ToLongDateString() at
                            @Model.Settings.SchedulingClosed.Value.ToShortTimeString()
                            to complete your selection.
                        </p>
                        <div class="d-flex justify-content-around mb-3 d-print-none">
                            <a asp-action="Performers" class="btn btn-lg btn-outline-primary">
                                <span class="fas fa-theater-masks"></span>
                                Schedule Performers
                            </a>
                            <a asp-action="Kits" class="btn btn-lg btn-outline-primary">
                                <span class="fas fa-box"></span>
                                Schedule Kits
                            </a>
                        </div>
                    }
                    else
                    {
                        <p class="mb-4 mt-0 lh-base">
                            Scheduling has begun! Selections need to be compeleted by
                            @Model.Settings.SchedulingClosed.Value.ToLongDateString() at
                            @Model.Settings.SchedulingClosed.Value.ToShortTimeString().
                        </p>
                        <div class="d-flex justify-content-around mb-3 d-print-none">
                            <a asp-action="Performers" class="btn btn-lg btn-outline-primary">
                                <span class="fas fa-theater-masks"></span>
                                View Performers
                            </a>
                            <a asp-action="Kits" class="btn btn-lg btn-outline-primary">
                                <span class="fas fa-box"></span>
                                View Kits
                            </a>
                        </div>
                    }
                }
                else if (Model.SchedulingStage == GRA.Domain.Model.PsSchedulingStage.SchedulingClosed)
                {
                    <p class="mb-4 mt-0 lh-base">
                        Scheduling has closed, the finalized schedule will be posted on
                        @Model.Settings.SchedulePosted.Value.ToLongDateString() at
                        @Model.Settings.SchedulePosted.Value.ToShortTimeString().
                        If you have any questions please contact
                        <a href="mailto:@Model.Settings.ContactEmail">
                            @Model.Settings.ContactEmail
                        </a>.
                    </p>
                    <div class="d-flex justify-content-around mb-3 d-print-none">
                        <a asp-action="Performers" class="btn btn-lg btn-outline-primary">
                            <span class="fas fa-theater-masks"></span>
                            View Performers
                        </a>
                        <a asp-action="Kits" class="btn btn-lg btn-outline-primary">
                            <span class="fas fa-box"></span>
                            View Kits
                        </a>
                    </div>
                }
                else if (Model.SchedulingStage >= GRA.Domain.Model.PsSchedulingStage.SchedulePosted)
                {
                    if (Model.BranchList?.Count() > 0)
                    {
                        <p class="mb-0 mt-0 d-print-none lh-base">
                            View finalized schedule for branch:
                        </p>
                        <form asp-action="Schedule" method="get" role="form">
                            <div class="d-flex justify-content-around d-print-none my-3">
                                <select name="id"
                                        asp-items="Model.BranchList"
                                        class="form-select"></select>
                                <button type="submit"
                                        class="btn btn-outline-primary ms-2">
                                    View
                                </button>
                            </div>
                        </form>
                    }
                    <p class="mb-4 mt-0 d-print-none lh-base">
                        If you have any questions please contact
                        <a href="mailto:@Model.Settings.ContactEmail">
                            @Model.Settings.ContactEmail
                        </a>
                    </p>
                    <div class="d-flex d-print-none justify-content-around mb-4">
                        <a asp-action="Performers" class="btn btn-lg btn-outline-primary">
                            <span class="fas fa-theater-masks"></span>
                            View Performers
                        </a>
                        <a asp-action="Kits" class="btn btn-lg btn-outline-primary">
                            <span class="fas fa-box"></span>
                            View Kits
                        </a>
                    </div>
                }

                @if (Model.SchedulingStage >= GRA.Domain.Model.PsSchedulingStage.SchedulingOpen)
                {
                    <h2 class="h4 mb-4">@Model.SystemName status</h2>
                    <table class="table table-bordered table-striped table-hover table-sm">
                        <tr>
                            <th>Branch</th>
                            <th>Status</th>
                        </tr>

                        @foreach (var branch in Model.Branches)
                        {
                            <tr>
                                <td>@branch.Name</td>
                                <td class="text-nowrap">
                                    @{
                                        int count = 0;
                                    }
                                    @foreach (var selection in branch.Selections)
                                    {
                                        count++;
                                        hasBackToBacks = hasBackToBacks || selection.BackToBackProgram;
                                        <span class="fa-stack cursor-pointer"
                                              style="color: @selection.AgeGroup.IconColor"
                                              title="@selection.Summary"
                                              data-bs-toggle="modal"
                                              data-bs-target="#selectionDetailsModal"
                                              data-performerid="@selection.Program?.PerformerId"
                                              data-performername="@selection.Program?.PerformerName"
                                              data-selectionid="@selection.Program?.Id"
                                              data-branchselectionid="@selection.Id"
                                              data-kitid="@selection.Kit?.Id"
                                              data-selectionname="@(selection.KitId.HasValue ? selection.Kit.Name : selection.Program.Title)"
                                              data-agegroupname="@selection.AgeGroup.Name"
                                              data-branchname="@branch.Name"
                                              data-creatorname="@selection.CreatedByUser.FullName"
                                              data-creatorid="@selection.CreatedBy"
                                              data-issitemanager="@Model.IsSiteManager"
                                              data-creatoremail="@selection.CreatedByUser.Email"
                                              data-updatername="@selection.UpdatedByUser?.FullName"
                                              data-updateremail="@selection.UpdatedByUser?.Email"
                                              data-onsitecontactname="@selection.OnSiteContactName"
                                              data-onsitecontactemail="@selection.OnSiteContactEmail"
                                              data-onsitecontactphone="@selection.OnSiteContactPhone"
                                              data-scheduled="@selection.RequestedStartTime"
                                              data-createdat="@selection.CreatedAt"
                                              data-selectedat="@selection.SelectedAt"
                                              data-backtoback="@selection.BackToBackProgram"
                                              data-duration="@selection.ScheduleDuration"
                                              data-startsat="@selection.StartsAt"
                                              data-endsat="@selection.EndsAt"
                                              data-iskit="@selection.KitId.HasValue">
                                            @if (selection.KitId.HasValue)
                                            {
                                                <span class="fas fa-square fa-stack-2x age-group-id-@selection.AgeGroupId"></span>
                                                <span class="fa-stack-2x fw-bold fs-4" style="color: white;">K</span>
                                            }
                                            else
                                            {
                                                @if (selection.BackToBackProgram)
                                                {
                                                    <span class="fas fa-plus-square fa-stack-2x age-group-id-@selection.AgeGroupId"></span>
                                                }
                                                else
                                                {
                                                    <span class="fas fa-check-square fa-stack-2x age-group-id-@selection.AgeGroupId"></span>
                                                }
                                            }
                                        </span>
                                    }
                                    @while (count < Model.Settings.SelectionsPerBranch)
                                    {
                                        count++;
                                        <span class="fa-stack">
                                            <span class="far fa-square fa-stack-2x"
                                                  title="Not selected yet."></span>
                                        </span>
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                    <div class="d-flex flex-wrap justify-content-center fs-5 fw-bold">
                        @foreach (var ageGroup in Model.AgeGroups)
                        {
                            <span style="color: @ageGroup.IconColor"
                                  class="text-nowrap d-block mb-2 me-4">
                                <span class="fas fa-square"></span>
                                <span class="fst-italic">@ageGroup.Name</span>
                            </span>
                        }
                        <span class="text-nowrap d-block mb-2 me-4">
                            <span class="fa-stack me-1"
                                  style="width: 1rem; height: 1rem; line-height: 0.7rem;">
                                <span class="fas fa-square fa-stack-1x"></span>
                                <span class="fa-stack-1x fs-6"
                                      style="color: white;">K</span>
                            </span>
                            <span class="fst-italic">Kit</span>
                        </span>
                        @if (hasBackToBacks)
                        {
                            <span class="text-nowrap d-block mb-2 me-4">
                                <span class="fas fa-plus-square"></span>
                                <span class="fst-italic">
                                    Back-to-back
                                </span>
                            </span>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade"
     id="selectionDetailsModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="selectionDetailsLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="selectionDetailsLabel">Selection details</h4>
                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table table-bordered table-striped table-sm">
                    <tr id="performerrow">
                        <th>Performer:</th>
                        <td>
                            <a href="#" target="_blank" id="performerlink">
                                <span id="performername"></span>
                                <span class="fas fa-external-link-alt"></span>
                            </a>
                        </td>
                    </tr>
                    <tr>
                        <th>Selection:</th>
                        <td>
                            <a href="#" target="_blank" id="selectionlink">
                                <span id="selectionname"></span>
                                <span class="fas fa-external-link-alt"></span>
                            </a>
                        </td>
                    </tr>
                    <tr>
                        <th>Branch:</th>
                        <td><span id="modelbranchname"></span></td>
                    </tr>
                    <tr>
                        <th>Age group:</th>
                        <td><span id="modalagegroupname"></span></td>
                    </tr>
                    <tr id="modalscheduledrow">
                        <th>Program start time:</th>
                        <td><span id="modalscheduled"></span></td>
                    </tr>
                    <tr id="modaldurationrow">
                        <th>
                            Total performer time:
                        </th>
                        <td>
                            <span id="modalduration"></span> minutes
                            (<span id="modalstartsat"></span>&ndash;<span id="modalendsat"></span>)
                            <br />
                            <small><em>(includes set-up and teardown)</em></small>
                        </td>
                    </tr>
                    <tr id="modalbacktoback" style="display: none;">
                        <th>Back-to-back selection</th>
                        <td>Yes</td>
                    </tr>
                    <tr>
                        <th>Scheduled by:</th>
                        <td>
                            <a id="modalschedulermailto"></a> at <span id="modalcreatedat"></span>
                        </td>
                    </tr>
                    <tr id="scheduleupdatedby">
                        <th>Schedule updated by:</th>
                        <td>
                            <a id="modalupdatermailto"></a> at <span id="modalupdatedat"></span>
                        </td>
                    </tr>
                    <tr>
                        <th>On site contact:</th>
                        <td class="d-flex">
                            <div class="flex-grow-1">
                                <div>
                                    <label class="on-site-contact-label" for="onsitecontactname">Name:</label>
                                    <span class="input-with-validation">
                                        <input class="on-site-contact-input disabled w-75"
                                               type="text"
                                               id="onsitecontactname"
                                               name="onsitecontactname"
                                               disabled
                                               required />
                                        <span class="validation"></span>
                                    </span>
                                </div>
                                <div>
                                    <label class="on-site-contact-label" for="onsitecontactemail">Email:</label>
                                    <span class="input-with-validation">
                                        <input class="on-site-contact-input disabled my-1 w-75"
                                               type="email"
                                               pattern=".+@@.+\..+"
                                               id="onsitecontactemail"
                                               name="onsitecontactemail"
                                               disabled
                                               required />
                                        <span class="validation"></span>
                                    </span>
                                </div>
                                <div>
                                    <label class="on-site-contact-label" for="onsitecontactphone">Phone:</label>
                                    <span class="input-with-validation">
                                        <input class="on-site-contact-input disabled w-75"
                                               type="tel"
                                               pattern="[0-9]{10}"
                                               id="onsitecontactphone"
                                               name="onsitecontactphone"
                                               disabled
                                               required />
                                        <span class="validation"></span>
                                    </span>
                                </div>
                                <div id="checkAlert" class="alert py-1 px-2 mt-2 d-none"></div>
                                <div>
                                    <button id="submitcontactinfo"
                                            type="button"
                                            class="on-site-contact-button btn btn-outline-success d-none mt-3"
                                            disabled>
                                        Update
                                    </button>
                                    <button id="cancelcontactinfo"
                                            type="button"
                                            class="on-site-contact-button btn btn-outline-danger d-none mt-3">
                                        Cancel
                                    </button>
                                </div>
                            </div>
                            <div>
                                <button id="editcontactinfo" class="btn btn-outline-primary btn-sm on-site-contact-button on-site-contact-edit">
                                    <span class="fas fa-pencil-alt fa-fw"></span>
                                </button>
                            </div>
                        </td>

                    </tr>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-outline-secondary"
                        data-bs-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background: #fcfcfc;
    }

    .card-body p {
        font-size: larger;
        line-height: 3rem;
        margin-bottom: 2rem;
    }
</style>

@section Scripts {
    <script>
        const checkAlert = document.querySelector("#checkAlert");
        const performerBaseLink = '@Url.Action(nameof(PerformerManagementController.Performer))'
        const programBaseLink = '@Url.Action(nameof(PerformerManagementController.Program))'
        const kitBaseLink = '@Url.Action(nameof(PerformerManagementController.Kit))'
        const contactUpdateLink = '@Url.Action(nameof(PerformerSchedulingController.EditBranchProgramContact))'

        var prevContactInfo = {};
        var branchSelectionId;
        var contactInfoUpdated = false;

        var contactInfoButtons = document.querySelectorAll(".on-site-contact-button");
        var contactInfoInputs = document.querySelectorAll(".on-site-contact-input");

        var alertTimerId = null;

        function allInputsValid() {

            for (const input of contactInfoInputs) {
                if (!input.checkValidity()) return false;
            };

            return true;
        }

        function hideEditContactInfo() {
            contactInfoInputs.forEach(function (input) {
                input.disabled = true;
            })
            contactInfoButtons.forEach(function (button) {
                button.id === "editcontactinfo"
                    ? button.classList.remove("d-none")
                    : button.classList.add('d-none');
            })
        }

        function startEditContactInfo() {
            clearAlert();
            contactInfoInputs.forEach(function (input) {
                prevContactInfo[input.id] = input.value
                input.disabled = false;
            });
            contactInfoButtons.forEach(function (button) {
                button.id === "editcontactinfo"
                    ? button.classList.add('d-none')
                    : button.classList.remove('d-none');
            });
        }

        function cancelEditContactInfo() {
            contactInfoInputs.forEach(_ => {
                _.value = prevContactInfo[_.id];
            })

            document.querySelector("#submitcontactinfo").disabled = true;

            hideEditContactInfo();
        }

        function clearAlert() {
            checkAlert.classList.add('d-none');
            checkAlert.classList.remove('alert-success');
            checkAlert.classList.remove('alert-danger');
            checkAlert.innerText = '';
            if (alertTimerId != null) {
                clearTimeout(alertTimerId);
                alertTimerId = null;
            }
        }

        function setAlert(alertType, message) {
            if (message.length = 0) {
                clearAlert(alertType, checkAlert);
                return;
            }
            checkAlert.classList.add(alertType);
            checkAlert.innerText = message;
            checkAlert.classList.remove('d-none');
            alertTimerId = setTimeout(() => {
                clearAlert(checkAlert);
            }, 5000);
        }

        $('#selectionDetailsModal').on('hide.bs.modal', function (e) {
            if (document.querySelector("#editcontactinfo").classList.contains('d-none')) {
                cancelEditContactInfo();
            }
            if (contactInfoUpdated) {
                window.location.reload();
            }
        })

        $('#selectionDetailsModal').on('show.bs.modal', function (e) {
            var dataElement = $(e.relatedTarget).closest('[data-bs-target]');
            branchSelectionId = dataElement.data('branchselectionid');
            document.querySelector("#editcontactinfo").classList.remove('d-none');
            $('#selectionDetailsLabel').html(dataElement.data('selectionname') + ' @@ ' + dataElement.data('branchname'));
            $('#selectionname').text(dataElement.data('selectionname'));
            $('#modalagegroupname').text(dataElement.data('agegroupname'));
            $('#modelbranchname').text(dataElement.data('branchname'));
            if (dataElement.data('creatoremail')) {
                $('#modalschedulermailto').attr('href', 'mailto:' + dataElement.data('creatoremail'));
            }
            else {
                $('#modalschedulermailto').attr('href', 'javascript:alert(\'No email address provided.\');');
            }
            $('#modalschedulermailto').text(dataElement.data('creatorname'));
            if (dataElement.data('updatername')) {
                $('#scheduleupdatedby').show();
                if (dataElement.data('updateremail')) {
                    $('#modalupdatermailto').attr('href', 'mailto:' + dataElement.data('updateremail'));
                }
                else {
                    $('#modalupdatermailto').attr('href', 'javascript:alert(\'No email address provided.\');');
                }
                $('#modalupdatermailto').text(dataElement.data('updatername'));
            }
            else {
                $('#scheduleupdatedby').hide();
            }
            $('#modalupdatermailto').text(dataElement.data('updatername'));
            $('#modalscheduled').text(dataElement.data('scheduled'));
            $('#modalduration').text(dataElement.data('duration'));
            $('#modalstartsat').text(dataElement.data('startsat'));
            $('#modalendsat').text(dataElement.data('endsat'));
            $('#modalcreatedat').text(dataElement.data('createdat'));
            $('#modalupdatedat').text(dataElement.data('selectedat'));
            $('#onsitecontactname').val(dataElement.data('onsitecontactname'));
            $('#onsitecontactemail').val(dataElement.data('onsitecontactemail'));
            $('#onsitecontactphone').val(dataElement.data('onsitecontactphone'));

            contactInfoInputs.forEach(function (input) {
                prevContactInfo[input.id] = input.value;
            });

            if (dataElement.data('issitemanager') === 'True' || dataElement.data('creatorid') === @Model.CurrentUserId) {
                document.querySelector('#editcontactinfo').classList.remove('d-none');
            } else {
                document.querySelector('#editcontactinfo').classList.add('d-none');
            }

            if (dataElement.data('performername')) {
                $('#performerrow').show()
                $('#performername').text(dataElement.data('performername'))
                $('#performerlink').attr('href', performerBaseLink + '/' + dataElement.data('performerid'));
            }
            else {
                $('#performerrow').hide()
                $('#performername').text('')
                $('#performerlink').attr('href', '#');
            }
            if (dataElement.data('backtoback') === 'True') {
                $('#modalbacktoback').show();
            } else {
                $('#modalbacktoback').hide();
            }
            if (dataElement.data('iskit') === 'True') {
                $('#selectionlink').attr('href', kitBaseLink + '/' + dataElement.data('kitid'))
                $('#modalscheduledrow').hide();
                $('#modaldurationrow').hide();
            }
            else {
                $('#selectionlink').attr('href', programBaseLink + '/' + dataElement.data('selectionid'))
                $('#modalscheduledrow').show();
                $('#modaldurationrow').show();
            }
        })

        document.querySelector("#editcontactinfo")?.addEventListener("click", startEditContactInfo);
        document.querySelector("#cancelcontactinfo")?.addEventListener("click", cancelEditContactInfo)
        document.querySelector("#submitcontactinfo")?.addEventListener("click", async () => {
            let OnSiteContactName = document.querySelector("#onsitecontactname").value;
            let OnSiteContactEmail = document.querySelector("#onsitecontactemail").value;
            let OnSiteContactPhone = document.querySelector("#onsitecontactphone").value;
            try {
                fetch(contactUpdateLink, {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        Id: branchSelectionId,
                        OnSiteContactName,
                        OnSiteContactEmail,
                        OnSiteContactPhone
                    })
                }).then(function () {
                    setAlert('alert-success', "Update successful!");
                    contactInfoUpdated = true;
                    hideEditContactInfo();
                })
            } catch (e) {
                console.error(e);
                setAlert('alert-danger', "Error updating contact information.");
            }
        })
        document.querySelectorAll(".on-site-contact-input").forEach(input => {
            input.addEventListener("input", function () {
                if (allInputsValid()) {
                    document.querySelector("#submitcontactinfo").disabled = false;
                } else {
                    document.querySelector("#submitcontactinfo").disabled = true;
                }
            })
        })
    </script>
}
