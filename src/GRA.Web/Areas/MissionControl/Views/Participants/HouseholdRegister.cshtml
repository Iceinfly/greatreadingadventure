@model GRA.Controllers.ViewModel.MissionControl.Participants.HouseholdRegisterViewModel

<form asp-controller="Participants" asp-action="RegisterHouseholdMember" method="post" role="form">
    <div class="row my-4">
        <div class="col-12">

            <input asp-for="Id" type="hidden" />

            <div class="row row-spacing">
                <div class="col-12">
                    <label asp-for="Username" class="col-form-label"></label>
                    <span id="Username-Icon" class="fa colored-icon d-none"></span>
                    <input asp-for="Username" class="form-control" autofocus />
                    <span id="Username-Validation" asp-validation-for="Username" class="text-success"></span>
                </div>
            </div>

            <div class="row row-spacing">
                <div class="col-12">
                    <label asp-for="Password" class="col-form-label"></label>
                    <input asp-for="Password" type="password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>

            <div class="row row-spacing">
                <div class="col-12">
                    <label asp-for="ConfirmPassword" class="col-form-label"></label>
                    <input asp-for="ConfirmPassword" type="password" class="form-control ignore"/>
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>

    <div class="mb-3">
        <a asp-action="Household" asp-route-id="@Model.Id" class="btn btn-outline-secondary">Return to Family/Group</a>
        <button type="submit"
                id="Submit"
                name="Submit"
                value="Submit"
                class="btn btn-outline-primary btn-spinner"
                button-spinner>
            <span class="buttonText">Register Member</span>
        </button>
    </div>
</form>

@section scripts {
<script>
        $.validator.setDefaults({
            ignore: ".ignore"
        });

        const usernameCheckUrl = "@Url.Action(nameof(GRA.Controllers.LookupController.UsernameInUse), LookupController.Name, new { Area = string.Empty })";
        const usernameIcon = $("#Username-Icon");
        const usernameField = $("#Username");
        const usernameValidation = $("#Username-Validation");

        usernameField.on("blur", function () {
            if ($(this).val().trim() != "" && !$(this).hasClass("input-validation-error")) {
                $(this).val($(this).val().trim());
                usernameIcon.addClass("fa-spinner fa-spin")
                    .removeClass("d-none fa-times-circle fa-check-circle text-success text-danger");
                $.post(usernameCheckUrl, { username: $(this).val() }, function (response) {
                    if (response) {
                        $(this).removeClass("valid");
                        $(this).addClass("input-validation-error");
                        usernameValidation.removeClass("field-validation-valid text-success")
                            .addClass("field-validation-error")
                            .text("Someone has already chosen that username.");
                        usernameIcon.removeClass("fa-spinner fa-spin")
                            .addClass("fa-times-circle text-danger");
                    }
                    else {
                        usernameValidation.removeClass("field-validation-valid")
                            .addClass("text-success")
                            .text("The chosen username is available.");
                        usernameIcon.removeClass("fa-spinner fa-spin")
                            .addClass("fa-check-circle text-success");
                    }
                });
            }
        });

        usernameField.on("keypress", function () {
            usernameIcon.addClass("d-none");
        });
</script>
}