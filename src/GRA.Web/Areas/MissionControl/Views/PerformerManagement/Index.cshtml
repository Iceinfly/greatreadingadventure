@model GRA.Controllers.ViewModel.MissionControl.PerformerManagement.StatusViewModel

@section styles {
    <link rel="stylesheet" href="/css/performerregistration.min.css" />
}

@await Html.PartialAsync("_PerformerManagementPartial")

<div class="row mb-2 d-none" id="UpdatedStatsAlert">
    <div class="col-md-8 offset-md-2">
        <div class="alert alert-info">
            Stats have updated, refresh the page to view the details in the progress bar and table below.
        </div>
    </div>
</div>

<div class="row text-center">
    <div class="col-12 col-md-4 offset-md-2 col-lg-2 offset-lg-2 mb-2">
        <div class="border border-3 border-secondary rounded text-bg-light w-100 d-flex flex-column align-items-center"
             style="height: 5.2rem;"
             id="performerCountBox">
            <div class="fs-5 pt-2" id="psPerformerCount">@Model.PerformerCount</div>
            <div class="fs-6 pt-0">Performers</div>
        </div>
    </div>
    <div class="col-12 col-md-4 col-lg-2 mb-2">
        <div class="border border-3 border-secondary rounded text-bg-light w-100 d-flex flex-column align-items-center"
             style="height: 5.2rem;"
             id="programCountBox">
            <div class="fs-5 pt-2" id="psProgramCount">
                @Model.ProgramCount
            </div>
            <div class="fs-6 pt-0">Programs</div>
        </div>
    </div>
    <div class="col-12 col-md-4 offset-md-2 col-lg-2 offset-lg-0 mb-2">
        <div class="border border-3 border-secondary rounded text-bg-light w-100 d-flex flex-column align-items-center"
             style="height: 5.2rem;"
             id="kitCountBox">
            <div class="fs-5 pt-2" id="psKitCount">
                @Model.KitCount
            </div>
            <div class="fs-6 pt-0">Kits</div>
        </div>
    </div>
    <div class="col-12 col-md-4 col-lg-2 mb-2">
        <div class="border border-3 border-secondary rounded text-bg-light w-100 d-flex flex-column align-items-center"
             style="height: 5.2rem;"
             id="stageBox">
            <div class="fs-5 pt-2">Stage:</div>
            <div class="fs-6 pt-0" id="psSchedulingStage">
                @Model.SchedulingStage
            </div>
        </div>
    </div>
</div>

<div class="row mt-2">
    <div class="col-md-8 offset-md-2">
        <div aria-label="Total Performer selection percent complete"
             aria-valuemax="100"
             aria-valuemin="0"
             aria-valuenow="@Model.SummaryPercent"
             class="progress"
             role="progressbar"
             style="height: 2.5rem;">
            <div class="progress-bar progress-bar-striped"
                 style="width: @Model.SummaryPercent; min-width: 3rem;">
                <strong class="fs-6">@Model.SummaryPercent</strong>
            </div>
        </div>
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-8 offset-md-2">
        @foreach (var system in Model.Systems)
        {
            <div class="accordion mt-1">
                <div class="accordion-item bg-@Model.Panel[system.Id]-subtle">
                    <div class="card-header" role="tab" id="heading-@system.Id">
                        <h4 class="card-title px-3 py-2">
                            <a class="collapsed fs-6 d-flex link-underline link-underline-opacity-0"
                               role="button"
                               data-bs-toggle="collapse"
                               data-bs-parent="#accordion"
                               href="#collapse-@system.Id"
                               aria-expanded="false"
                               aria-controls="collapse-@system.Id">
                                <span class="flex-grow-1 text-dark">@system.Name</span>
                                <span class="text-dark">
                                    @Model.Percent[system.Id]
                                    <span class="d-none d-sm-inline-block"> @Model.Completion[system.Id]</span>
                                </span>
                            </a>
                        </h4>
                    </div>
                    <div id="collapse-@system.Id"
                         class="card-collapse @Model.CollapsePanel p-2"
                         role="tabpanel"
                         aria-labelledby="heading-@system.Id">
                        <div class="card-body">
                            <div aria-label="System @system.Name selection percent complete"
                                 aria-valuemax="100"
                                 aria-valuemin="0"
                                 aria-valuenow="@Model.Percent[system.Id]"
                                 class="progress"
                                 role="progressbar"
                                 style="height: 1.25rem;">
                                <div class="progress-bar bg-@Model.Panel[system.Id]"
                                     style="width: @Model.Percent[system.Id]; min-width: 2rem;">
                                    @Model.Percent[system.Id]
                                </div>
                            </div>
                            @foreach (var branch in system.Branches)
                            {
                                <div class="d-flex bg-light p-2 border-secondary border-bottom align-items-center branch-selection-status">
                                    <div class="flex-grow-1">@branch.Name</div>
                                    <div>
                                        @{
                                            int count = 0;
                                        }
                                        @foreach (var selection in branch.Selections)
                                        {
                                            count++;
                                            <span class="fa-stack cursor-pointer"
                                                  style="color: @selection.AgeGroup.IconColor"
                                                  title="@selection.Summary"
                                                  data-bs-toggle="modal"
                                                  data-bs-target="#selectionDetailsModal"
                                                  data-performerid="@selection.Program?.PerformerId"
                                                  data-performername="@selection.Program?.PerformerName"
                                                  data-selectionid="@selection.Program?.Id"
                                                  data-branchselectionid="@selection.Id"
                                                  data-kitid="@selection.Kit?.Id"
                                                  data-selectionname="@(selection.KitId.HasValue ? selection.Kit.Name : selection.Program.Title)"
                                                  data-agegroupname="@selection.AgeGroup.Name"
                                                  data-branchname="@branch.Name"
                                                  data-systemname="@system.Name"
                                                  data-creatorname="@selection.CreatedByUser.FullName"
                                                  data-creatoremail="@selection.CreatedByUser.Email"
                                                  data-updatername="@selection.UpdatedByUser?.FullName"
                                                  data-updateremail="@selection.UpdatedByUser?.Email"
                                                  data-onsitecontactname="@selection.OnSiteContactName"
                                                  data-onsitecontactemail="@selection.OnSiteContactEmail"
                                                  data-onsitecontactphone="@selection.OnSiteContactPhone"
                                                  data-scheduled="@selection.RequestedStartTime"
                                                  data-createdat="@selection.CreatedAt"
                                                  data-selectedat="@selection.SelectedAt"
                                                  data-backtoback="@selection.BackToBackProgram"
                                                  data-duration="@selection.ScheduleDuration"
                                                  data-startsat="@selection.StartsAt"
                                                  data-endsat="@selection.EndsAt"
                                                  data-iskit="@selection.KitId.HasValue">
                                                @if (selection.KitId.HasValue)
                                                {
                                                    <span class="fas fa-square fa-stack-2x age-group-id-@selection.AgeGroupId"></span>
                                                    <span class="fa-stack-2x fw-bold fs-4" style="color: white;">K</span>
                                                }
                                                else
                                                {
                                                    @if (selection.BackToBackProgram)
                                                    {
                                                        <span class="fas fa-plus-square fa-stack-2x age-group-id-@selection.AgeGroupId"></span>
                                                    }
                                                    else
                                                    {
                                                        <span class="fas fa-check-square fa-stack-2x age-group-id-@selection.AgeGroupId"></span>
                                                    }
                                                }
                                            </span>
                                        }
                                        @while (count < Model.Settings.SelectionsPerBranch)
                                        {
                                            count++;
                                            <span class="fa-stack">
                                                <span class="far fa-square fa-stack-2x"></span>
                                            </span>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="d-flex flex-wrap justify-content-center fs-5 fw-bold mt-3">
            @foreach (var ageGroup in Model.AgeGroups)
            {
                <span style="color: @ageGroup.IconColor"
                      class="text-nowrap d-block mb-2 me-4">
                    <span class="fas fa-square"></span>
                    @ageGroup.Name
                </span>
            }
            <span class="text-nowrap d-block mb-2 me-4">
                <span class="fa-stack me-1"
                      style="width: 1rem; height: 1rem; line-height: 0.7rem;">
                    <span class="fas fa-square fa-stack-1x"></span>
                    <span class="fa-stack-1x fs-6"
                          style="color: white;">K</span>
                </span>
                <span class="fst-italic">Kit</span>
            </span>
            <span class="text-nowrap d-block mb-2 me-4">
                <span class="fas fa-plus-square"></span>
                <span class="fst-italic">Back-to-back</span>
            </span>
        </div>
    </div>
</div>

<div class="modal fade"
     id="selectionDetailsModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="selectionDetailsLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="selectionDetailsLabel">Selection details</h4>
                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table table-bordered table-striped table-sm">
                    <tr id="performerrow">
                        <th>Performer:</th>
                        <td>
                            <a href="#" target="_blank" id="performerlink">
                                <span id="performername"></span>
                                <span class="fas fa-external-link-alt"></span>
                            </a>
                        </td>
                    </tr>
                    <tr>
                        <th>Selection:</th>
                        <td>
                            <a href="#" target="_blank" id="selectionlink">
                                <span id="selectionname"></span>
                                <span class="fas fa-external-link-alt"></span>
                            </a>
                        </td>
                    </tr>
                    <tr>
                        <th>System:</th>
                        <td><span id="modelsystemname"></span></td>
                    </tr>
                    <tr>
                        <th>Branch:</th>
                        <td><span id="modelbranchname"></span></td>
                    </tr>
                    <tr>
                        <th>Age group:</th>
                        <td><span id="modalagegroupname"></span></td>
                    </tr>
                    <tr id="modalscheduledrow">
                        <th>Program start time:</th>
                        <td><span id="modalscheduled"></span></td>
                    </tr>
                    <tr id="modaldurationrow">
                        <th>
                            Total performer time:
                        </th>
                        <td>
                            <span id="modalduration"></span> minutes
                            (<span id="modalstartsat"></span>&ndash;<span id="modalendsat"></span>)
                            <br />
                            <small><em>(includes set-up and teardown)</em></small>
                        </td>
                    </tr>
                    <tr id="modalbacktoback" style="display: none;">
                        <th>Back-to-back selection</th>
                        <td>Yes</td>
                    </tr>
                    <tr>
                        <th>Scheduled by:</th>
                        <td>
                            <a id="modalschedulermailto"></a> at <span id="modalcreatedat"></span>
                        </td>
                    </tr>
                    <tr id="scheduleupdatedby">
                        <th>Schedule updated by:</th>
                        <td>
                            <a id="modalupdatermailto"></a> at <span id="modalupdatedat"></span>
                        </td>
                    </tr>
                    <tr>
                        <th>On site contact:</th>
                        <td class="d-flex">
                            <div class="flex-grow-1">
                                <div>
                                    <label class="on-site-contact-label" for="onsitecontactname">Name:</label>
                                    <span class="input-with-validation">
                                        <input class="on-site-contact-input disabled w-75"
                                               type="text"
                                               id="onsitecontactname"
                                               name="onsitecontactname"
                                               disabled
                                               required />
                                        <span class="validation"></span>
                                    </span>
                                </div>
                                <div>
                                    <label class="on-site-contact-label" for="onsitecontactemail">Email:</label>
                                    <span class="input-with-validation">
                                        <input class="on-site-contact-input disabled my-1 w-75"
                                               type="email"
                                               pattern=".+@@.+\..+"
                                               id="onsitecontactemail"
                                               name="onsitecontactemail"
                                               disabled
                                               required />
                                        <span class="validation"></span>
                                    </span>
                                </div>
                                <div>
                                    <label class="on-site-contact-label" for="onsitecontactphone">Phone:</label>
                                    <span class="input-with-validation">
                                        <input class="on-site-contact-input disabled w-75"
                                               type="tel"
                                               pattern="[0-9]{10}"
                                               id="onsitecontactphone"
                                               name="onsitecontactphone"
                                               disabled
                                               required />
                                        <span class="validation"></span>
                                    </span>
                                </div>
                                <div id="checkAlert" class="alert py-1 px-2 mt-2 d-none"></div>
                                <div>
                                    <button id="submitcontactinfo"
                                            type="button"
                                            class="on-site-contact-button btn btn-outline-success d-none mt-3"
                                            disabled>
                                        Update
                                    </button>
                                    <button id="cancelcontactinfo"
                                            type="button"
                                            class="on-site-contact-button btn btn-outline-danger d-none mt-3">
                                        Cancel
                                    </button>
                                </div>
                            </div>
                            <div>
                                <button id="editcontactinfo" class="btn btn-outline-primary btn-sm on-site-contact-button on-site-contact-edit">
                                    <span class="fas fa-pencil-alt fa-fw"></span>
                                </button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-outline-secondary"
                        data-bs-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const checkAlert = document.querySelector("#checkAlert");
        const performerBaseLink = '@Url.Action(nameof(PerformerSchedulingController.Performer))'
        const programBaseLink = '@Url.Action(nameof(PerformerSchedulingController.Program))'
        const kitBaseLink = '@Url.Action(nameof(PerformerSchedulingController.Kit))'
        const contactUpdateLink = '@Url.Action(nameof(PerformerManagementController.EditBranchProgramContact))'

        var prevContactInfo = {};
        var branchSelectionId;
        var contactInfoUpdated = false;

        var contactInfoButtons = document.querySelectorAll(".on-site-contact-button");
        var contactInfoInputs = document.querySelectorAll(".on-site-contact-input");

        var alertTimerId = null;

        function allInputsValid() {
            for (const input of contactInfoInputs) {
                if (!input.checkValidity()) return false;
            };
            return true;
        }

        function hideEditContactInfo() {
            contactInfoInputs.forEach(function (input) {
                input.disabled = true;
            })
            contactInfoButtons.forEach(function (button) {
                button.id === "editcontactinfo" 
                    ? button.classList.remove("d-none") 
                    : button.classList.add('d-none');
            })
        }

        function startEditContactInfo() {
            clearAlert();
            contactInfoInputs.forEach(function (input) {
                prevContactInfo[input.id] = input.value
                input.disabled = false;
            });
            contactInfoButtons.forEach(function (button) {
                button.id === "editcontactinfo" 
                    ? button.classList.add('d-none') 
                    : button.classList.remove('d-none');
            });
        }

        function cancelEditContactInfo() {
            contactInfoInputs.forEach(_ => {
                _.value = prevContactInfo[_.id];
            })

            document.querySelector("#submitcontactinfo").disabled = true;

            hideEditContactInfo();
        }

        function clearAlert() {
            checkAlert.classList.add('d-none');
            checkAlert.classList.remove('alert-success');
            checkAlert.classList.remove('alert-danger');
            checkAlert.innerText = '';
            if(alertTimerId != null) {
                clearTimeout(alertTimerId);
                alertTimerId = null;
            }
        }

        function setAlert(alertType, message) {
            if(message.length = 0) {
                clearAlert(alertType, checkAlert);
                return;
            }
            checkAlert.classList.add(alertType);
            checkAlert.innerText = message;
            checkAlert.classList.remove('d-none');
            alertTimerId = setTimeout(() => {
                clearAlert(checkAlert);
            }, 5000);
        }

        $('#selectionDetailsModal').on('hide.bs.modal', function (e) {
            if (document.querySelector("#editcontactinfo").classList.contains('d-none')) {
                cancelEditContactInfo();
            }
            if (contactInfoUpdated) {
                window.location.reload();
            }
        })

        $('#selectionDetailsModal').on('show.bs.modal', function (e) {
            var dataElement = $(e.relatedTarget).closest('[data-bs-target]');
            branchSelectionId = dataElement.data('branchselectionid');
            document.querySelector("#editcontactinfo").classList.remove('d-none');
            $('#selectionDetailsLabel').html(dataElement.data('selectionname') + ' @@ ' + dataElement.data('branchname'));
            $('#selectionname').text(dataElement.data('selectionname'));
            $('#modalagegroupname').text(dataElement.data('agegroupname'));
            $('#modelbranchname').text(dataElement.data('branchname'));
            $('#modelsystemname').text(dataElement.data('systemname'));
            if (dataElement.data('creatoremail')) {
                $('#modalschedulermailto').attr('href', 'mailto:' + dataElement.data('creatoremail'));
            }
            else {
                $('#modalschedulermailto').attr('href', 'javascript:alert(\'No email address provided.\');');
            }
            $('#modalschedulermailto').text(dataElement.data('creatorname'));
            if (dataElement.data('updatername')) {
                $('#scheduleupdatedby').show();
                if (dataElement.data('updateremail')) {
                    $('#modalupdatermailto').attr('href', 'mailto:' + dataElement.data('updateremail'));
                }
                else {
                    $('#modalupdatermailto').attr('href', 'javascript:alert(\'No email address provided.\');');
                }
                $('#modalupdatermailto').text(dataElement.data('updatername'));
            }
            else {
                $('#scheduleupdatedby').hide();
            }
            $('#modalupdatermailto').text(dataElement.data('updatername'));
            $('#modalscheduled').text(dataElement.data('scheduled'));
            $('#modalduration').text(dataElement.data('duration'));
            $('#modalstartsat').text(dataElement.data('startsat'));
            $('#modalendsat').text(dataElement.data('endsat'));
            $('#modalcreatedat').text(dataElement.data('createdat'));
            $('#modalupdatedat').text(dataElement.data('selectedat'));
            $('#onsitecontactname').val(dataElement.data('onsitecontactname'));
            $('#onsitecontactemail').val(dataElement.data('onsitecontactemail'));
            $('#onsitecontactphone').val(dataElement.data('onsitecontactphone'));

            contactInfoInputs.forEach(function (input) {
                prevContactInfo[input.id] = input.value;
            });

            if (dataElement.data('performername')) {
                $('#performerrow').show()
                $('#performername').text(dataElement.data('performername'))
                $('#performerlink').attr('href', performerBaseLink + '/' + dataElement.data('performerid'));
            }
            else {
                $('#performerrow').hide()
                $('#performername').text('')
                $('#performerlink').attr('href', '#');
            }
            if (dataElement.data('backtoback') === 'True') {
                $('#modalbacktoback').show();
            } else {
                $('#modalbacktoback').hide();
            }
            if (dataElement.data('iskit') === 'True') {
                $('#selectionlink').attr('href', kitBaseLink + '/' + dataElement.data('kitid'))
                $('#modalscheduledrow').hide();
                $('#modaldurationrow').hide();
            }
            else {
                $('#selectionlink').attr('href', programBaseLink + '/' + dataElement.data('selectionid'))
                $('#modalscheduledrow').show();
                $('#modaldurationrow').show();
            }
        });

        // handle hovers of performers
        document.querySelectorAll(".branch-selection-status")
            .forEach(p => {
                p.addEventListener('mouseenter', _ => {
                    _.target.classList.add("selection-hover");
                });
                p.addEventListener('mouseleave', _ => {
                    _.target.classList.remove("selection-hover");
                });
            });

        document.querySelector("#editcontactinfo").addEventListener("click", startEditContactInfo);
        document.querySelector("#cancelcontactinfo").addEventListener("click", cancelEditContactInfo)
        document.querySelector("#submitcontactinfo").addEventListener("click", async () => {
            let OnSiteContactName = document.querySelector("#onsitecontactname").value;
            let OnSiteContactEmail = document.querySelector("#onsitecontactemail").value;
            let OnSiteContactPhone = document.querySelector("#onsitecontactphone").value;
            try {
                fetch(contactUpdateLink, {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        Id: branchSelectionId,
                        OnSiteContactName,
                        OnSiteContactEmail,
                        OnSiteContactPhone
                    })
                }).then(function () {
                    setAlert('alert-success', "Update successful!");
                    contactInfoUpdated = true;
                    hideEditContactInfo();
                })
            } catch (e) {
                console.error(e);
                setAlert('alert-danger', "Error updating contact information.");
            }
        })

        document.querySelectorAll(".on-site-contact-input").forEach(input => {
            input.addEventListener("input", function () {
                if (allInputsValid()) {
                    document.querySelector("#submitcontactinfo").disabled = false;
                } else {
                    document.querySelector("#submitcontactinfo").disabled = true;
                }
            })
        })

        setInterval(function () {
            let priorCount = $("#psProgramCount").text().trim();
            let priorPerf = $("#psPerformerCount").text().trim();
            let priorKit = $("#psKitCount").text().trim();
            let priorStage = $("#psSchedulingStage").text().trim();

            $("#psProgramCount").html("<span class=\"fas fa-spinner fa-spin\"></span>");
            $("#psPerformerCount").html("<span class=\"fas fa-spinner fa-spin\"></span>");
            $("#psKitCount").html("<span class=\"fas fa-spinner fa-spin\"></span>");
            $("#psSchedulingStage").html("<span class=\"fas fa-spinner fa-spin\"></span>");

            $.ajax("@Url.Action(nameof(PerformerManagementController.GetPerformerStatus))")
                .done(function (performerStatus) {
                    doUpdate("#psProgramCount", "#programCountBox", priorCount, performerStatus.programCount);
                    doUpdate("#psPerformerCount", "#performerCountBox", priorPerf, performerStatus.performerCount);
                    doUpdate("#psKitCount", "#kitCountBox", priorKit, performerStatus.kitCount);
                    doUpdate("#psSchedulingStage", "#stageBox", priorStage, performerStatus.schedulingStage);
                });
        }, 10000);

        function doUpdate(elementId, containerId, oldValue, newValue) {
            $(elementId).text(newValue);
            if(oldValue != newValue) {
                $(containerId)
                    .addClass("border-info")
                    .removeClass("border-secondary");
                $("#UpdatedStatsAlert").removeClass("d-none");
            }
        }
    </script>
}
