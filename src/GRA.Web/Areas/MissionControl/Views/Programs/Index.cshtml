@model GRA.Controllers.ViewModel.MissionControl.Programs.ProgramListViewModel

@await Html.PartialAsync("_ProgramsPartial")

@section inHeading {
    <div class="ms-auto d-print-none">
        <a asp-action="@nameof(ProgramsController.Create)"
           class="btn btn-outline-success">
            <span class="fas fa-plus-circle fa-fw"></span>
            Add a Program
        </a>
    </div>
}

<form method="get" role="form">
    <div class="row my-3">
        <div class="col-12 input-group">
            <input asp-for="Search"
                   class="form-control"
                   placeholder="Search programs" />
            <a asp-action="@nameof(ProgramsController.Index)"
               class="btn btn-outline-secondary">Clear</a>
            <input type="submit" value="Search" class="btn btn-outline-primary" />
        </div>
    </div>
</form>

<div class="row py-2">
    <div class="col-12">
        @if (Model.Programs.Count() == 0)
        {
            <div class="alert alert-warning">No Programs</div>
        }
        else
        {
            <div>
                <table class="table table-sm table-bordered link-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th style="width: 9rem;">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var program in Model.Programs)
                        {
                            <tr>
                                <td class="td-class">
                                    <a asp-action="Edit" asp-route-id="@program.Id" class="rowlink">
                                        @program.Name
                                    </a>
                                </td>
                                <td class="on-top gra-mc-icon">
                                    <div class="d-flex justify-content-evenly" role="toolbar">
                                        <div class="btn-group mr-2" role="group">
                                            <button type="button"
                                                    data-id="@program.Id"
                                                    class="btn btn-outline-secondary btn-sm decreasePosition"
                                                    disabled="@(Model.PaginateModel.CurrentPage == 1 && program == Model.Programs.First() ? " disabled" : null)">
                                                <span class="fas fa-arrow-up fa-fw"></span>
                                            </button>
                                            <button type="button"
                                                    data-id="@program.Id"
                                                    class="btn btn-outline-secondary btn-sm increasePosition"
                                                    disabled="@(Model.PaginateModel.CurrentPage == Model.PaginateModel.MaxPage && program == Model.Programs.Last() ? " disabled" : null)">
                                                <span class="fas fa-arrow-down fa-fw"></span>
                                            </button>
                                        </div>
                                        <div class="btn-group ps-2" role="group">
                                            <button type="button"
                                                    class="btn btn-outline-danger btn-sm"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#deleteModal"
                                                    data-id="@program.Id"
                                                    data-name="@program.Name">
                                                <span class="fas fa-times fa-fw"
                                                      aria-hidden="true"></span>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <paginate paginateModel="@Model.PaginateModel"></paginate>
        }
    </div>
</div>

<div class="row">
    <div class="modal fade"
         id="deleteModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="deleteModalLabel">
        <div class="modal-dialog" role="document">
            <form asp-action="Delete" method="post" role="form" style="display:inline">
                <input asp-for="PaginateModel.CurrentPage" type="hidden" />
                <input asp-for="Search" type="hidden" />
                <input asp-for="Program.Id" type="hidden" />
                <input asp-for="Program.Name" type="hidden" />
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title h4" id="deleteModalLabel">Delete Program</h1>
                        <button type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close dialog">
                        </button>
                    </div>
                    <div class="modal-body p-0">
                        <div class="modal-body d-flex align-items-stretch">
                            <span class="fas fa-exclamation-triangle fa-lg text-danger pt-2 me-3"
                                  aria-hidden="true"></span>
                            <span id="modal-text"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button"
                                class="btn btn-outline-secondary"
                                data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit"
                                class="btn btn-outline-danger"
                                aria-label="Confirm"
                                button-spinner>
                            <span class="fas fa-times fa-fw" aria-hidden="true"></span>
                            Delete
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script>
        const decreasePositionUrl = "@Url.Action("DecreasePosition")";
        const increasePositionUrl = "@Url.Action("IncreasePosition")";
        const firstPage = @((Model.PaginateModel.CurrentPage == 1).ToString().ToLower());
        const lastPage = @((Model.PaginateModel.CurrentPage == Model.PaginateModel.MaxPage).ToString().ToLower());

        $("#deleteModal").on("show.bs.modal", function (e) {
            const button = $(e.relatedTarget);
            const id = button.data("id");
            const name = button.data("name");
            const modal = $(this);
            modal.find("#modal-text").html("Are you sure you want to delete the program: <strong>" + name + "</strong>?");
            modal.find("#Program_Id").val(id);
            modal.find("#Program_Name").val(name);
        });

        $(window).on("load", function () {
            $(".td-class").each(function () {
                $(this).children("a.rowlink").height($(this).outerHeight());
            });
        });

        $(window).resize(function () {
            $(".td-class").each(function () {
                $(this).children("a.rowlink").height($(this).outerHeight());
            });
        });

        function AdjustPosition(e) {
            const button = $(e.currentTarget);
            const child = button.children("span");
            if (child.hasClass("fa-spinner") == false) {
                const increment = button.hasClass("increasePosition");
                const id = button.data("id");
                const link = increment ? increasePositionUrl : decreasePositionUrl;
                const parentDiv = button.parent().parent().parent().parent();

                parentDiv.addClass("table-info");
                
                child.removeClass("fa-arrow-up fa-arrow-down").addClass("fa-spinner fa-pulse");
                $.post(link, { id: id }, function (response) {
                    if (response == true) {
                        const moveDiv = increment ? parentDiv.next() : parentDiv.prev();
                        const prevDiv = increment ? parentDiv : moveDiv;
                        const nextDiv = increment ? moveDiv : parentDiv;

                        if(increment) {
                            parentDiv.insertAfter(moveDiv)
                        }
                        else {
                            parentDiv.insertBefore(moveDiv);
                        }
                        if (prevDiv.next().length == 0 && lastPage) {
                            prevDiv.find(".increasePosition").prop("disabled", true);
                        }
                        prevDiv.find(".decreasePosition").prop("disabled", false);

                        if (nextDiv.prev().length == 0 && firstPage) {
                            nextDiv.find(".decreasePosition").prop("disabled", true);
                        }
                        nextDiv.find(".increasePosition").prop("disabled", false);
                    }
                    else {
                        alert("Error changing position.");
                    }
                    child.removeClass("fa-spinner fa-pulse")
                        .addClass(increment ? "fa-arrow-down" : "fa-arrow-up");
                    setTimeout(function() { parentDiv.removeClass("table-info"); }, 300);                    
                });
            }

        }

        $(".increasePosition").on("click", AdjustPosition);
        $(".decreasePosition").on("click", AdjustPosition);
    </script>
}