@model GRA.Controllers.ViewModel.MissionControl.Reporting.ReportCriteriaViewModel

<form asp-action="@nameof(ReportingController.Run)"
      class="form-horizontal"
      method="post"
      role="form">
    <input asp-for="ReportId" type="hidden" />
    <input asp-for="BadgeRequiredList" type="hidden" />
    <input asp-for="ChallengeRequiredList" type="hidden" />

    <div class="row mt-4">
        <div class="col-12">
            <button type="button"
                    class="btn btn-outline-secondary"
                    id="entireProgram">
                Entire program
            </button>
            <button type="button"
                    class="btn btn-outline-secondary"
                    id="thisWeek">
                Last 7 days
            </button>
        </div>
    </div>

    <div class="row">
        <div class="col-12 col-sm-6 my-2">
            <label asp-for="StartDate" class="col-form-label"></label>
            <div datetimepicker-container id="startDatePicker">
                <input asp-for="StartDate" datetimepicker-input type="text" />
            </div>
            <span asp-validation-for="StartDate" class="text-danger"></span>
        </div>
        <div class="col-12 col-sm-6 my-2">
            <label asp-for="EndDate" class="col-form-label"></label>
            <div datetimepicker-container id="endDatePicker">
                <input asp-for="EndDate" datetimepicker-input type="text" />
            </div>
            <span asp-validation-for="EndDate" class="text-danger"></span>
        </div>
    </div>

    <div class="row my-2">
        <div class="col-12">
            <label asp-for="SystemId" class="col-form-label"></label>
            <select asp-for="SystemId" asp-items="Model.SystemList" class="form-select">
                <option value="">All systems</option>
            </select>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-info-subtle">
                    <h3 class="card-title">Badges</h3>
                </div>
                <div class="card-body">
                    <div>
                        <table class="table table-sm table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th width="75px">Type</th>
                                    <th width="75px">Badge</th>
                                    <th width="75px">&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody id="requirementList">
                                <tr id="noRequirements"
                                    class="@(Model.ReportBadges?.Count > 0 ? "d-none" : "")">
                                    <td colspan="4"><em>No badges reported</em></td>
                                </tr>
                                @if (Model.ReportBadges != null)
                                {
                                    foreach (var requirement in Model.ReportBadges)
                                    {
                                        <tr>
                                            <td>
                                                @requirement.Name
                                            </td>
                                            <td class="text-center">
                                                <span class="fa fa-2x @requirement.Icon"
                                                      title="@requirement.IconDescription"></span>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrWhiteSpace(requirement.BadgePath))
                                                {
                                                    <img class="img-thumbnail badge-xs"
                                                         src="~/@requirement.BadgePath?@DateTime.Now.ToString("yyMMddHHmmss")" />
                                                }
                                                else
                                                {
                                                    <text>&nbsp;</text>
                                                }
                                            </td>
                                            <td>
                                                <button type="button"
                                                        id="removeRequirementButton"
                                                        class="btn btn-link btn-sm"
                                                        data-badgeid="@requirement.BadgeId"
                                                        data-challengeid="@requirement.ChallengeId">
                                                    <span class="fas fa-2x fa-minus-circle text-danger"
                                                          aria-hidden="true"></span>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <button type="button"
                            id="addButton"
                            class="btn btn-outline-primary">
                        Add Badge
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <button type="submit" class="btn btn-outline-primary">
                <span class="fas fa-file-alt fa-fw"></span>
                Run Report!
            </button>
        </div>
    </div>
</form>

<div aria-labelledby="listModalLabel"
     class="modal fade"
     data-bs-backdrop="static"
     data-bs-keyboard="false"
     id="listModal"
     role="dialog"
     tabindex="-1">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="card">
                <div class="card-header">
                    <h1 class="h4 modal-title lead">Add badge</h1>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <ul class="nav nav-pills">
                                <li id="All" class="nav-item requirementScope">
                                    <a>All</a>
                                </li>
                                <li id="System" class="nav-item requirementScope">
                                    <a class="nav-link">My System</a>
                                </li>
                                <li id="Branch" class="nav-item requirementScope">
                                    <a class="nav-link">My Branch</a>
                                </li>
                                <li id="Mine" class="nav-item requirementScope">
                                    <a class="nav-link">Mine</a>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class="row my-2">
                        <div class="col-12">
                            <form class="d-inline" onsubmit="return false;">
                                <div class="input-group">
                                    <input id="searchText"
                                           class="form-control"
                                           placeholder="Enter text to search for an event here" />
                                    <button type="button"
                                            id="clearButton"
                                            class="btn btn-outline-secondary">
                                        Clear
                                    </button>
                                    <input type="submit"
                                           id="searchButton"
                                           class="btn btn-outline-primary"
                                           value="Search" />
                                </div>
                            </form>
                        </div>
                    </div>
                    <div id="searchMessage" class="row d-none">
                        <div class="col-12">
                            <p class="mb-0 pt-1 ps-2">
                                Searching for: <strong id="searchTerm"></strong>
                            </p>
                        </div>
                    </div>
                    <div class="row my-2">
                        <div id="modalRequirementList" class="col-12">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-outline-secondary"
                            data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        const badgeIds = $("#BadgeRequiredList").val().split(',').filter(function (x) { return x }).map(Number);
        const challengeIds = $("#ChallengeRequiredList").val().split(',').filter(function (x) { return x }).map(Number);
        const endDatePicker = graInitalizePickerDatetime(document.getElementById("endDatePicker"));
        const requirementsUrl = "@Url.Action(nameof(LookupController.GetRequirementList), LookupController.Name)";
        const startDatePicker = graInitalizePickerDatetime(document.getElementById("startDatePicker"));

        var defaultDateTime = graGetLocalDate();
        var page = 1;
        var scope = "All";
        var search = "";

        function UpdateRequirementsList() {
            $.get(requirementsUrl,
                {
                    badgeIds: badgeIds.join(','),
                    challengeIds: challengeIds.join(','),
                    scope: scope,
                    search: search,
                    page: page
                }, function (response) {
                    $("#modalRequirementList").html(response);
                });
        }

        $("#addButton").on('click', function (e) {
            $("#listModal").modal("show");
            UpdateRequirementsList();
        });

        $(document).on("click", ".addRequirementButton", function () {
            if (challengeIds) {
                challengeIds.pop();
            }
            if (badgeIds) {
                badgeIds.pop();
            }
            $(".fa-minus-circle").parent().parent().parent().remove();
            if (!$(this).hasClass("disabled")) {
                let badgeId = $(this).data("badgeid");
                let challengeId = $(this).data("challengeid");

                if (challengeId != "") {
                    challengeIds.push(challengeId);
                    $("#ChallengeRequiredList").val(challengeId);
                    $("#BadgeRequiredList").val("");
                }
                else if (badgeId != "") {
                    badgeIds.push(badgeId);
                    $("#BadgeRequiredList").val(badgeId);
                    $("#ChallengeRequiredList").val("");
                }
                $("#noRequirements").addClass("d-none");
                let row = $(this).parent().parent().clone();
                let addedItem = row.find(".addRequirementButton");
                addedItem.removeClass("addRequirementButton")
                addedItem.children().removeClass("fa-plus-circle text-primary");
                addedItem.children().addClass("fa-minus-circle text-danger");
                addedItem.attr("id", "removeRequirementButton");
                $("#requirementList").append(row);

                $(".addRequirementButton").addClass("disabled");

                UpdateRequirementsList();
                $("#addButton").html('Change Badge');
                $("#listModal").modal("hide");
            }
        });

        $(document).on("click", "#removeRequirementButton", function () {
            let badgeId = $(this).data("badgeid");
            let challengeId = $(this).data("challengeid");

            if (challengeId != "") {
                challengeIds.splice(challengeIds.indexOf(challengeId), 1);
                $("#ChallengeRequiredList").val("");
            }
            else if (badgeId != "") {
                badgeIds.splice(badgeIds.indexOf(badgeId), 1);
                $("#BadgeRequiredList").val("");
            }
            $(this).parent().parent().remove();
            if (badgeIds == "" && challengeIds == "") {
                $("#noRequirements").removeClass("d-none");
            }
            $("#addButton").html('Add Badge');
        });

        $(".requirementScope").on("click", function (e) {
            e.preventDefault();
            $(this).siblings().children().removeClass("active");
            $(this).children().addClass("active");
            scope = $(this).attr("id");
            page = 1;
            UpdateRequirementsList();
        });

        $("#searchButton").on("click", function () {
            search = $("#searchText").val();
            if (search != "") {
                $("#searchMessage").removeClass("d-none");
                $("#searchTerm").html(search);
            }
            else {
                $("#searchMessage").addClass("d-none");
            }
            page = 1;
            UpdateRequirementsList();
        })

        $("#clearButton").on("click", function () {
            $("#searchText").val("");
            search = "";
            $("#searchMessage").addClass("d-none");
            page = 1;
            UpdateRequirementsList();
        })

        $(document).on("click", ".page-button", function () {
            if (!$(this).hasClass("disabled")) {
                page = $(this).data("page");
                UpdateRequirementsList();
            }
        });

        document.getElementById("entireProgram").addEventListener("click", _ => {
            startDatePicker.clear();
            endDatePicker.clear();
        });

        document.getElementById("thisWeek").addEventListener("click", _ => {
            defaultDateTime = graGetLocalDate();
            defaultDateTime.setDate(defaultDateTime.getDate() - 1);
            graPickerSetDate(endDatePicker, defaultDateTime);
            defaultDateTime.setDate(defaultDateTime.getDate() - 7);
            graPickerSetDate(startDatePicker, defaultDateTime);
        });

        defaultDateTime.setDate(defaultDateTime.getDate() - 1);
        graPickerSetDate(endDatePicker, defaultDateTime);
        defaultDateTime.setDate(defaultDateTime.getDate() - 1);
        graPickerSetDate(startDatePicker, defaultDateTime);

        $("form").on("submit", function (e) {
            if (badgeIds.length == 0 && challengeIds.length == 0) {
                e.preventDefault();
                alert("Please select which badges to report on.");
            }
        });
    </script>
}